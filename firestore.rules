rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is accessing their own data
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Users collection rules
    match /users/{userId} {
      // Allow read if authenticated and it's their own profile
      allow read: if isOwner(userId);
      
      // Allow create if authenticated and creating their own profile
      allow create: if isOwner(userId)
        && request.resource.data.uid == userId
        && request.resource.data.createdAt == request.time
        && request.resource.data.updatedAt == request.time;
      
      // Allow update if authenticated and updating their own profile
      allow update: if isOwner(userId)
        && request.resource.data.uid == userId
        && request.resource.data.createdAt == resource.data.createdAt
        && request.resource.data.updatedAt == request.time;
        
      // Never allow delete
      allow delete: if false;
    }

    // Activities collection rules
    match /users/{userId}/activities/{date} {
      allow read: if isOwner(userId);
      
      allow create, update: if isOwner(userId)
        && request.resource.data.userId == userId
        && request.resource.data.date == date
        && request.resource.data.updatedAt == request.time;
      
      allow delete: if isOwner(userId);
    }

    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 